How did viewing a diff between two versions of a file help you see the bug that was introduced?
Using the Diff of the two files allowed me to quickly find the difference between the two files.
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
You could compare a working version of your code to a non-working version of your code to help find bugs that prevent the non-working code from working.
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Manually committing allows for user error, whereas, automatic saves may save at poor points - for example, automatically saving when you accidently select all your code and delete it.
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
I think Git was designed to be used by programmers, and frequently there are interconnected files that need to be saved together in programming. Whereas, Google Docs deals with presentations, word documents, and spreadsheets that are usually independant.
How can you use the commands git log and git diff to view the history of files?
You can use git log in Git Bash to view a history of all the commits on a Git(?). git diff may be used to view what the changes are between two of the Gits within the log history.
How might using version control make you more confident to make changes that could break something?
I would be more confident, because I would be able to make a change and if the change was unsuccessful, then I would be able to revert to a previous version of code that was working properly.
Now that you have your workspace set up, what do you want to try using Git for? Completing this course.